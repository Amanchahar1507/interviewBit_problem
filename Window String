string Solution::minWindow(string A, string B) {
 
 int n = A.size();
 int m = B.size();
int count = 0;
int in=0,j=0,start_index = 0,min_length = 0;
if(m>n){
    return "";
}
 unordered_map<char,int>mp;
 for(int i=0;i<m;i++){
     if(mp.find(B[i])==mp.end()){
         mp[B[i]]=1;
     }
     else mp[B[i]]++;
 }
 for(int i=0;i<n;i++,j++){
     if(mp.find(A[i])==mp.end())continue;
     mp[A[j]]--;
     if(mp[A[j]]>=0)count++;
     if(count==m){
         while(mp.find(A[in])==mp.end()||mp[A[in]]<0){
             if(mp.find(A[in])!=mp.end())mp[A[in]]++;
             in++;
         }
         if(min_length==0||j-in+1<min_length){
             min_length=j-in+1;
             start_index=in;
         }
     }
 }
 return A.substr(start_index,min_length);
 
}
