void solve(int index, vector<int>&ds, vector<vector<int>>&ans,vector<int>&A){
    ans.push_back(ds);
    for(int i = index;i<A.size();i++){
        if(i!=index && A[i]==A[i-1])continue;
        ds.push_back(A[i]);
        solve(i+1,ds,ans,A);
        ds.pop_back();
    }
}

vector<vector<int> > Solution::subsetsWithDup(vector<int> &A) {
   sort(A.begin(),A.end());
    vector<vector<int>>ans;
    vector<int>ds;
     sort(ans.begin(),ans.end());
    solve(0,ds,ans,A);
    return ans;
}
